> merge_sort([54, 62, 93, 17, 77, 31, 44, 55, 20])
>>> split([54, 62, 93, 17, 77, 31, 44, 55, 20])
>>> split return left  [54, 62, 93, 17] >>> split return right  [77, 31, 44, 55, 20]
> merge_sort([54, 62, 93, 17])
>>> split([54, 62, 93, 17])
>>> split return left  [54, 62] >>> split return right  [93, 17]
> merge_sort([54, 62])
>>> split([54, 62])
>>> split return left  [54] >>> split return right  [62]
> merge_sort([54])
single item merge_sort list is  [54]
left merge_sort  [54]
> merge_sort([62])
single item merge_sort list is  [62]
right merge_sort  [62]
>>>>>> merge() called with [54] [62]
>>>>>> left merge 1 is  [54]
>>>>>> right merge 2 is [54, 62]
>>>>>> merge() returned  [54, 62]
left merge_sort  [54, 62]
> merge_sort([93, 17])
>>> split([93, 17])
>>> split return left  [93] >>> split return right  [17]
> merge_sort([93])
single item merge_sort list is  [93]
left merge_sort  [93]
> merge_sort([17])
single item merge_sort list is  [17]
right merge_sort  [17]
>>>>>> merge() called with [93] [17]
>>>>>> right merge 1 is  [17]
>>>>>> left merge 2 is  [17, 93]
>>>>>> merge() returned  [17, 93]
right merge_sort  [17, 93]
>>>>>> merge() called with [54, 62] [17, 93]
>>>>>> right merge 1 is  [17]
>>>>>> left merge 1 is  [17, 54]
>>>>>> left merge 1 is  [17, 54, 62]
>>>>>> right merge 2 is [17, 54, 62, 93]
>>>>>> merge() returned  [17, 54, 62, 93]
left merge_sort  [17, 54, 62, 93]
> merge_sort([77, 31, 44, 55, 20])
>>> split([77, 31, 44, 55, 20])
>>> split return left  [77, 31] >>> split return right  [44, 55, 20]
> merge_sort([77, 31])
>>> split([77, 31])
>>> split return left  [77] >>> split return right  [31]
> merge_sort([77])
single item merge_sort list is  [77]
left merge_sort  [77]
> merge_sort([31])
single item merge_sort list is  [31]
right merge_sort  [31]
>>>>>> merge() called with [77] [31]
>>>>>> right merge 1 is  [31]
>>>>>> left merge 2 is  [31, 77]
>>>>>> merge() returned  [31, 77]
left merge_sort  [31, 77]
> merge_sort([44, 55, 20])
>>> split([44, 55, 20])
>>> split return left  [44] >>> split return right  [55, 20]
> merge_sort([44])
single item merge_sort list is  [44]
left merge_sort  [44]
> merge_sort([55, 20])
>>> split([55, 20])
>>> split return left  [55] >>> split return right  [20]
> merge_sort([55])
single item merge_sort list is  [55]
left merge_sort  [55]
> merge_sort([20])
single item merge_sort list is  [20]
right merge_sort  [20]
>>>>>> merge() called with [55] [20]
>>>>>> right merge 1 is  [20]
>>>>>> left merge 2 is  [20, 55]
>>>>>> merge() returned  [20, 55]
right merge_sort  [20, 55]
>>>>>> merge() called with [44] [20, 55]
>>>>>> right merge 1 is  [20]
>>>>>> left merge 1 is  [20, 44]
>>>>>> right merge 2 is [20, 44, 55]
>>>>>> merge() returned  [20, 44, 55]
right merge_sort  [20, 44, 55]
>>>>>> merge() called with [31, 77] [20, 44, 55]
>>>>>> right merge 1 is  [20]
>>>>>> left merge 1 is  [20, 31]
>>>>>> right merge 1 is  [20, 31, 44]
>>>>>> right merge 1 is  [20, 31, 44, 55]
>>>>>> left merge 2 is  [20, 31, 44, 55, 77]
>>>>>> merge() returned  [20, 31, 44, 55, 77]
right merge_sort  [20, 31, 44, 55, 77]
>>>>>> merge() called with [17, 54, 62, 93] [20, 31, 44, 55, 77]
>>>>>> left merge 1 is  [17]
>>>>>> right merge 1 is  [17, 20]
>>>>>> right merge 1 is  [17, 20, 31]
>>>>>> right merge 1 is  [17, 20, 31, 44]
>>>>>> left merge 1 is  [17, 20, 31, 44, 54]
>>>>>> right merge 1 is  [17, 20, 31, 44, 54, 55]
>>>>>> left merge 1 is  [17, 20, 31, 44, 54, 55, 62]
>>>>>> right merge 1 is  [17, 20, 31, 44, 54, 55, 62, 77]
>>>>>> left merge 2 is  [17, 20, 31, 44, 54, 55, 62, 77, 93]
>>>>>> merge() returned  [17, 20, 31, 44, 54, 55, 62, 77, 93]
Original list   [54, 62, 93, 17, 77, 31, 44, 55, 20]
Sorted list  [17, 20, 31, 44, 54, 55, 62, 77, 93]
